devtools::load_all(".")
?mvndpf
devtools::load_all(".")
?mypkgr
devtools::load_all(".")
devtools::load_all(".")
install.packages("mypkgr")
install.packages("mypkgr")
library(mypkgr)
?mypkgr
usethis::use_package_doc()
install.packages("mypkgr")
library(mypkgr)
install.packages("mypkgr")
install.packages("mypkgr")
?mypkgr
devtools::load_all(".")
?mypkgr
?mvndpf
usethis::use_testthat()
usethis::use_test()
library(devtools)
install.packages("devtools")
install.packages("future.apply")
install.packages("microbenchmark")
install.packages("mvtnorm")
install.packages("profvis")
install.packages("Rcpp")
install.packages("RcppArmadillo")
install.packages("roxygen2")
install.packages("testthat")
install.packages("usethis")
devtools::load_all(".")
library(mypkgr)
devtools::load_all(".")
devtools::load_all(".")
?mvnpdf
?mvnpdf
devtools::load_all(".")
?mvnpdf
install.packages("devtools")
install.packages("future.apply")
install.packages("microbenchmark")
install.packages("mvtnorm")
install.packages("profvis")
install.packages("Rcpp")
install.packages("RcppArmadillo")
install.packages("roxygen2")
install.packages("testthat")
install.packages("usethis")
library("devtools")
library("future.apply")
library("microbenchmark")
library("mvtnorm")
library("profvis")
library("Rcpp")
library("RcppArmadillo")
library("roxygen2")
library("testthat")
library("usethis")
install.packages("mvtnorm")
install.packages("mvtnorm")
library("mvtnorm")
library(mypkgr)
devtools::load_all(".")
?mvnpdf
library(mypkgr)
usethis::use_git_config(user.name = "larrouture iban", user.email = "iban.larrouture@u-bordeaux.fr")
usethis::use_github()
usethis::use_github()
gh_token_help()
?use_github
gh_token_help()`
`gh_token_help()`
gh_token_help()
if (FALSE) {
pkgpath <- file.path(tempdir(), "testpkg")
create_package(pkgpath)
## now, working inside "testpkg", initialize git repository
use_git()
## create github repository and configure as git remote
use_github()
}
pkgpath <- file.path(tempdir(), "testpkg")
create_package(pkgpath)
## now, working inside "testpkg", initialize git repository
use_git()
## create github repository and configure as git remote
use_github()
## now, working inside "testpkg", initialize git repository
usethis::use_git()
## create github repository and configure as git remote
usethis::use_github()
call(`gh_token_help()`)
call(gh_token_help())
call(gh_token_help())
usethis::gh_token_help()
usethis::create_github_token()
usethis::create_github_token()
usethis::use_github()
'https://github.com': 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
usethis::use_github()
usethis::use_github()
usethis::gh_token_help()
## now, working inside "testpkg", initialize git repository
usethis::use_git()
## create github repository and configure as git remote
usethis::use_github()
use_github(
organisation = NULL,
private = FALSE,
visibility = c("public", "private", "internal"),
protocol = git_protocol(),
host = NULL,
auth_token = deprecated(),
credentials = deprecated()
)
usethis::use_github(
organisation = NULL,
private = FALSE,
visibility = c("public", "private", "internal"),
protocol = git_protocol(),
host = NULL,
auth_token = deprecated(),
credentials = deprecated()
)
usethis::use_github(
organisation = NULL,
private = FALSE,
visibility = c("public", "private", "internal"),
protocol = git_protocol(),
host = NULL
)
usethis::use_github(
organisation = NULL,
private = FALSE,
visibility = c("public", "private", "internal"),
host = NULL
)
usethis::use_github(
organisation = NULL,
private = FALSE,
host = NULL
)
usethis::create_github_token()
credentials::set_github_pat("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")
usethis::git_sitrep()
usethis::use_github()
usethis::use_readme_rmd()
usethis::use_readme_rmd()
